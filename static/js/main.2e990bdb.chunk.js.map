{"version":3,"sources":["img/background.jpg","img/logo.png","img/profile.png","components/Header.js","lib/utils.js","components/Events.js","components/Profile.js","components/Form.js","lib/getJson.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","logo","alt","Button","onClick","onAction","formatDate","stringDate","parts","split","Date","getDate","toLocaleDateString","weekday","year","month","day","formatHour","hourString","hours","ampm","EventCard","isFull","enrolled","quota","seats","Card","date","hour","Body","Title","title","Text","description","onReservation","Events","activeEvents","events","filter","event","active","minutes","moment","minute","blur","bgImage","background","bgImageAlt","strength","map","data","key","Profile","profilePic","EventForm","useState","nombre","correo","referencia","telefono","formData","setForm","loader","setLoader","success","setSuccess","handleSumbit","a","preventDefault","id_sesion","formKey","serializedData","URLSearchParams","toString","axios","get","handleChange","target","value","form","Form","onSubmit","e","Group","controlId","Label","Control","type","placeholder","required","onChange","as","rows","variant","onCancel","disabled","Spinner","animation","size","role","aria-hidden","successMessage","body","getSheetData","query","useIntegers","showRows","showColumns","url","response","responseObj","columns","feed","entry","i","length","keys","Object","newRow","queried","j","indexOf","name","substring","content","$t","toLowerCase","isNaN","Number","hasOwnProperty","push","App","setformKey","setEvents","useEffect","getJson","slice","eventsWithKey","fetchData","scroller","scrollTo","duration","delay","smooth","find","index","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,2OCqC5BC,EAhCA,SAACC,GACd,OACE,4BAAQC,UAAU,wBAChB,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,iBAAiBC,IAAKC,IAAMC,IAAI,sBAEjD,yBAAKH,UAAU,6DACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,yBAAd,qCAGA,wBAAIA,UAAU,4BAAd,+HAIA,yBAAKA,UAAU,gCACb,kBAACI,EAAA,EAAD,CACEC,QAAS,kBAAMN,EAAMO,YACrBN,UAAU,iDAFZ,sBAIkB,2CAChB,mC,iDCrBHO,EAAa,SAACC,GAQzB,OAdqB,SAACA,GACtB,IAAMC,EAAQD,EAAWE,MAAM,KAE/B,OADa,IAAIC,KAAKF,EAAM,GAAIA,EAAM,GAAK,EAAGA,EAAM,IAKvCG,CAAQJ,GAOTK,mBAAmB,QANf,CACdC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,aAKIC,EAAa,SAACC,GAAgB,IAAD,EACjBA,EAAWT,MAAM,KADA,mBACnCU,EADmC,KAElCC,EAAOD,GAAS,GAAK,KAAO,KAKlC,OAHAA,GADAA,GAAgB,KACQ,IAEF,IANkB,KAMF,IAAMC,GCbxCC,EAAY,SAACvB,GACjB,IAAMwB,EAASxB,EAAMyB,UAAYzB,EAAM0B,MACjCC,EAAQ3B,EAAM0B,MAAQ1B,EAAMyB,SAQlC,OACE,yBAAKxB,UAAU,2BACb,kBAAC2B,EAAA,EAAD,CAAM3B,UAAU,qCACd,kBAAC2B,EAAA,EAAK7B,OAAN,CAAaE,UAAU,+BACrB,uBAAGA,UAAU,uBAAuBO,EAAWR,EAAM6B,MAArD,KACA,uBAAG5B,UAAU,uBAAuBkB,EAAWnB,EAAM8B,QAEvD,kBAACF,EAAA,EAAKG,KAAN,CAAW9B,UAAU,iEACnB,kBAAC2B,EAAA,EAAKI,MAAN,KAAahC,EAAMiC,OACnB,kBAACL,EAAA,EAAKM,KAAN,KAAYlC,EAAMmC,cAChBX,GAAU,yBAAKvB,UAAU,SAAf,sBAA2C0B,GACvD,kBAACtB,EAAA,EAAD,CACEJ,UAAS,yBAAoBuB,EAAS,WAAa,IACnDlB,QAAS,WAlBZkB,GACHxB,EAAMoC,kBAmBCZ,EAAS,aAAe,yBAkCtBa,EA3BA,SAACrC,GACd,IAAMsC,EAAetC,EAAMuC,OACxBC,QAAO,SAACC,GAAD,MAA4B,SAAjBA,EAAMC,UACxBF,QAAO,SAACC,GAAW,IAAD,EACOA,EAAMX,KAAKnB,MAAM,KADxB,mBACVmB,EADU,KACJa,EADI,KAGjB,OADiBC,IAAOH,EAAMZ,MAAMC,KAAKA,GAAMe,OAAOF,GACpCC,SAEtB,OACE,kBAAC,WAAD,CAAUE,KAAM,EAAGC,QAASC,IAAYC,WAAW,UAAUC,SAAU,KACrE,yBAAKjD,UAAU,8BACb,oDACA,yBAAKA,UAAU,8BACZqC,EAAaa,KAAI,SAACC,GACjB,OACE,kBAAC,EAAD,iBACMA,EADN,CAEEhB,cAAe,kBAAMpC,EAAMoC,cAAcgB,EAAKC,gB,iBCb/CC,MA3Cf,WACE,OACE,6BAASrD,UAAU,gBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,IACb,yBACEA,UAAU,YACVC,IAAKqD,IACLnD,IAAI,wBAIV,yBAAKH,UAAU,qBACb,6BACE,wBAAIA,UAAU,aAAd,oBACA,wBAAIA,UAAU,QACZ,2JAIA,iGAGA,uEACA,0EACA,wFAGA,gH,wCCpBVsB,EAAY,SAACvB,GAAD,OAChB,6BACE,kBAAC4B,EAAA,EAAD,CAAM3B,UAAU,+BACd,kBAAC2B,EAAA,EAAK7B,OAAN,CAAaE,UAAU,+BACrB,uBAAGA,UAAU,uBAAuBO,EAAWR,EAAM6B,MAArD,KACA,uBAAG5B,UAAU,uBAAuBkB,EAAWnB,EAAM8B,QAEvD,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,KAAahC,EAAMiC,WA0HZuB,EApHG,SAACxD,GAAW,IAAD,EACCyD,mBAAS,CACnCC,OAAQ,GACRC,OAAQ,GACRC,WAAY,GACZC,SAAU,KALe,mBACpBC,EADoB,KACVC,EADU,OAOCN,oBAAS,GAPV,mBAOpBO,EAPoB,KAOZC,EAPY,OAQGR,oBAAS,GARZ,mBAQpBS,EARoB,KAQXC,EARW,KAUrBC,EAAY,uCAAG,WAAO3B,GAAP,iBAAA4B,EAAA,6DACnB5B,EAAM6B,iBACNL,GAAU,GACJb,EAHa,aAGJmB,UAAWvE,EAAMwE,SAAYV,GAE1C,mGACIW,EAAiB,IAAIC,gBAAgBtB,GAAMuB,WAN9B,SAObC,IAAMC,IAFV,mGAEoBJ,GAPH,OAQnBN,GAAW,GARQ,2CAAH,sDAWZW,EAAe,SAACrC,EAAOY,GAC3BU,EAAQ,eACHD,EADE,eAEJT,EAAMZ,EAAMsC,OAAOC,UAIlBC,EACJ,kBAACC,EAAA,EAAD,CACEC,SAAU,SAACC,GAAD,OAAOhB,EAAagB,IAC9BnF,UAAU,8BAEV,kBAACiF,EAAA,EAAKG,MAAN,CAAYC,UAAU,UACpB,kBAACJ,EAAA,EAAKK,MAAN,eACA,kBAACL,EAAA,EAAKM,QAAN,CACEC,KAAK,QACLC,YAAY,qBACZC,UAAQ,EACRX,MAAOlB,EAASJ,OAChBkC,SAAU,SAACR,GAAD,OAAON,EAAaM,EAAG,cAGrC,kBAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,UACpB,kBAACJ,EAAA,EAAKK,MAAN,8BACA,kBAACL,EAAA,EAAKM,QAAN,CACEC,KAAK,QACLC,YAAY,qBACZC,UAAQ,EACRX,MAAOlB,EAASH,OAChBiC,SAAU,SAACR,GAAD,OAAON,EAAaM,EAAG,cAGrC,kBAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKK,MAAN,oBACA,kBAACL,EAAA,EAAKM,QAAN,CACEC,KAAK,QACLT,MAAOlB,EAASD,SAChB+B,SAAU,SAACR,GAAD,OAAON,EAAaM,EAAG,gBAGrC,kBAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,cACpB,kBAACJ,EAAA,EAAKK,MAAN,kCACA,kBAACL,EAAA,EAAKM,QAAN,CACEK,GAAG,WACHC,KAAK,IACLd,MAAOlB,EAASF,WAChBgC,SAAU,SAACR,GAAD,OAAON,EAAaM,EAAG,kBAGrC,yBAAKnF,UAAU,eACb,kBAACI,EAAA,EAAD,CACE0F,QAAQ,iBACR9F,UAAU,OACVK,QAAS,kBAAMN,EAAMgG,aAHvB,YAOA,kBAAC3F,EAAA,EAAD,CACE4F,SAAUjC,EACV+B,QAAQ,UACRN,KAAK,SACLxF,UAAU,QAET+D,EACC,kBAACkC,EAAA,EAAD,CACEL,GAAG,OACHM,UAAU,OACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SAEZ,KACHtC,EAAS,cAAgB,iBAM5BuC,EACJ,kBAAC3E,EAAA,EAAD,CAAM4E,MAAI,GAAV,iKAMF,OACE,kBAAC,WAAD,CAAU1D,KAAM,EAAGC,QAASC,IAAYC,WAAW,UAAUC,SAAU,KACrE,yBAAKjD,UAAU,2BACb,kBAAC,EAAcD,EAAMyC,OACpByB,EAAUqC,EAAiBtB,KC5ErBwB,EA3DG,uCAAG,kEAAApC,EAAA,6DACH,EACF,+CACRqC,EAAQ,GACRC,GAAc,EACdC,GAAW,EACXC,GAAc,EACdC,EAPa,qDAEL,+CAFK,YACH,EADG,kCASIlC,IAAMC,IAAIiC,GATd,UASbC,EATa,OAWb3D,EAAS2D,EAAT3D,KACF4D,EAAc,GACdlB,EAAO,GACPmB,EAAU,KACV7D,GAAQA,EAAK8D,MAAQ9D,EAAK8D,KAAKC,OAfhB,iBAgBjB,IAASC,EAAI,EAAGA,EAAIhE,EAAK8D,KAAKC,MAAME,OAAQD,IAAK,CAK/C,IAJID,EAAQ/D,EAAK8D,KAAKC,MAAMC,GACxBE,EAAOC,OAAOD,KAAKH,GACnBK,EAAS,GACTC,GAAU,EACLC,EAAI,EAAGA,EAAIJ,EAAKD,OAAQK,IAChBJ,EAAKI,GAAGC,QAAQ,SACf,IACVtE,EAAMiE,EAAKI,GACXE,EAAOvE,EAAIwE,UAAU,GACrBC,EAAUX,EAAM9D,IAChB2B,EAAQ8C,EAAQC,IACVC,cAAcL,QAAQjB,EAAMsB,gBAAkB,IACtDP,GAAU,IAEQ,IAAhBd,GAAyBsB,MAAMjD,KACjCA,EAAQkD,OAAOlD,IAEjBwC,EAAOI,GAAQ5C,GACC,IAAZyC,IACGR,EAAQkB,eAAeP,KAC1BX,EAAQW,GAAQ,IAGhBX,EAAQW,GAAMQ,KAAKpD,MAKX,IAAZyC,GACF3B,EAAKsC,KAAKZ,GA9CG,OAiDG,IAAhBX,IACFG,EAAW,QAAcC,IAEV,IAAbL,IACFI,EAAW,KAAWlB,GArDP,kBAuDVkB,GAvDU,4CAAH,qD,MCyDHqB,MAjDf,WAAgB,IAAD,EACiB5E,mBAAS,MAD1B,mBACNe,EADM,KACG8D,EADH,OAEe7E,mBAAS,IAFxB,mBAENlB,EAFM,KAEEgG,EAFF,KAyBb,OArBAC,qBAAU,WAAM,4CACd,gCAAAnE,EAAA,sEACqBoE,IADrB,OACQrF,EADR,OAEQb,EAASa,EAAK0C,KAAK4C,MAAM,GACzBC,EAAgBpG,EAAOY,KAAI,SAACC,GAAD,oBAC/BC,IAAI,GAAD,OAAKD,EAAKvB,KAAV,YAAkBuB,EAAKtB,OACvBsB,MAELmF,EAAUI,GAPZ,4CADc,uBAAC,WAAD,wBAUdC,KACC,IAWD,yBAAK3I,UAAU,OACb,oCACE,kBAAC,EAAD,CAAQM,SAAU,kBAXNqH,EAWqB,cAVrCiB,WAASC,SAASlB,EAAM,CACtBmB,SAAU,IACVC,MAAO,EACPC,OAAQ,mBAJK,IAACrB,KAYZ,kBAAC,EAAD,MACA,kBAAC,UAAD,CAASA,KAAK,UACVpD,EAMA,kBAAC,EAAD,CACEA,QAASA,EACTwB,SAAU,kBAAMsC,EAAW,OAC3B7F,MAAOF,EAAO2G,MAAK,SAAC9F,GAAD,OAAUA,EAAKC,MAAQmB,OAR5C,kBAAC,EAAD,CACEjC,OAAQA,EACRH,cAAe,SAAC+G,GAAD,OAAWb,EAAWa,UChC/BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2e990bdb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.939ab334.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f264f7ba.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.c25278f3.png\";","import React from \"react\";\n\nimport logo from \"../img/logo.png\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Header = (props) => {\n  return (\n    <header className=\"masthead text-center\">\n      <div className=\"masthead-content h-100\">\n        <div className=\"position-absolute w-100\">\n          <img className=\"img-fluid mt-4\" src={logo} alt=\"Jeanine Gonzalez\" />\n        </div>\n        <div className=\"container h-100 d-flex flex-column justify-content-center\">\n          <div className=\"mt-5\">\n            <h1 className=\"masthead-heading mb-0\">\n              Aprendiendo a respirar para sanar\n            </h1>\n            <h2 className=\"masthead-subheading mb-0\">\n              Sesiones de prácticas contemplativas (Mindfulness) para calmar la\n              ansiedad, el estrés y los sentimientos de tristeza.\n            </h2>\n            <div className=\"action-button-container mt-5\">\n              <Button\n                onClick={() => props.onAction()}\n                className=\"action-button mt-4 text-dark font-weight-bold\"\n              >\n                Registrate Aquí <span>Es Gratis</span>\n                <i></i>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","export const getDate = (stringDate) => {\n  const parts = stringDate.split(\"-\");\n  const date = new Date(parts[0], parts[1] - 1, parts[2]);\n  return date;\n};\n\nexport const formatDate = (stringDate) => {\n  const date = getDate(stringDate);\n  const options = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  };\n  return date.toLocaleDateString(\"es-MX\", options);\n};\n\nexport const formatHour = (hourString) => {\n  let [hours, minutes] = hourString.split(\":\");\n  const ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  // minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  var strTime = hours + \":\" + minutes + \" \" + ampm;\n  return strTime;\n};\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { Parallax } from \"react-parallax\";\nimport moment from \"moment\";\n\nimport background from \"../img/background.jpg\";\n\nimport { formatDate, formatHour } from \"../lib/utils\";\n\nconst EventCard = (props) => {\n  const isFull = props.enrolled >= props.quota;\n  const seats = props.quota - props.enrolled;\n\n  const handleClick = () => {\n    if (!isFull) {\n      props.onReservation();\n    }\n  };\n\n  return (\n    <div className=\"col-sm-12 col-xl-6 py-2\">\n      <Card className=\" mt-2 mb-2 font-weight-bold h-100\">\n        <Card.Header className=\"bg-primary font-weight-bold\">\n          <p className=\"mb-0 text-uppercase\">{formatDate(props.date)} </p>\n          <p className=\"mb-0 text-uppercase\">{formatHour(props.hour)}</p>\n        </Card.Header>\n        <Card.Body className=\"d-flex flex-column justify-content-between align-items-center\">\n          <Card.Title>{props.title}</Card.Title>\n          <Card.Text>{props.description}</Card.Text>\n          {!isFull && <div className=\"seats\">Lugares restantes: {seats}</div>}\n          <Button\n            className={`text-dark w-50 ${isFull ? \"disabled\" : \"\"}`}\n            onClick={() => handleClick()}\n          >\n            {isFull ? \"Cupo lleno\" : \"Reservar mi lugar\"}\n          </Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\nconst Events = (props) => {\n  const activeEvents = props.events\n    .filter((event) => event.active === \"TRUE\")\n    .filter((event) => {\n      const [hour, minutes] = event.hour.split(\":\");\n      const datetime = moment(event.date).hour(hour).minute(minutes);\n      return datetime > moment();\n    });\n  return (\n    <Parallax blur={2} bgImage={background} bgImageAlt=\"the cat\" strength={200}>\n      <div className=\"events container mt-4 mb-4\">\n        <h1>Próximas sesiones</h1>\n        <div className=\"row justify-content-center\">\n          {activeEvents.map((data) => {\n            return (\n              <EventCard\n                {...data}\n                onReservation={() => props.onReservation(data.key)}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </Parallax>\n  );\n};\n\nexport default Events;\n","import React from \"react\";\nimport profilePic from \"../img/profile.png\";\n\nfunction Profile() {\n  return (\n    <section className=\"profile py-5\">\n      <div className=\"container\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-sm-6 col-md-3\">\n            <div className=\"\">\n              <img\n                className=\"img-fluid\"\n                src={profilePic}\n                alt=\"Sesión de yoga\"\n              />\n            </div>\n          </div>\n          <div className=\"col-sm-6 col-md-9\">\n            <div>\n              <h1 className=\"display-6\">Jeanine Gonzalez</h1>\n              <ul className=\"info\">\n                <li>\n                  Licenciada en Administración de Empresas con Maestría en\n                  Psicoterapia Humanista y estudios en Psicología Infantil.\n                </li>\n                <li>\n                  Maestra de Yoga Restaurativo y Yoga con especialidad en niños.\n                </li>\n                <li>Miembro del Instituto Mexicano de Yoga.</li>\n                <li>Maestra de Conciencia y Desarrollo Mental.</li>\n                <li>\n                  Ha dedicado gran parte de su vida al trabajo con grupos.\n                </li>\n                <li>\n                  Fundadora del programa yoga, meditación y mindfulness en las\n                  escuelas.\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nimport { Parallax } from \"react-parallax\";\nimport axios from \"axios\";\n\nimport background from \"../img/background.jpg\";\n\nimport { formatDate, formatHour } from \"../lib/utils\";\n\nconst EventCard = (props) => (\n  <div>\n    <Card className=\" mt-2 mb-2 font-weight-bold\">\n      <Card.Header className=\"bg-primary font-weight-bold\">\n        <p className=\"mb-0 text-uppercase\">{formatDate(props.date)} </p>\n        <p className=\"mb-0 text-uppercase\">{formatHour(props.hour)}</p>\n      </Card.Header>\n      <Card.Body>\n        <Card.Title>{props.title}</Card.Title>\n      </Card.Body>\n    </Card>\n  </div>\n);\n\nconst EventForm = (props) => {\n  const [formData, setForm] = useState({\n    nombre: \"\",\n    correo: \"\",\n    referencia: \"\",\n    telefono: \"\",\n  });\n  const [loader, setLoader] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const handleSumbit = async (event) => {\n    event.preventDefault();\n    setLoader(true);\n    const data = { id_sesion: props.formKey, ...formData };\n    const url =\n      \"https://script.google.com/macros/s/AKfycbzm-XgzVgh4RsDlHmpY5sjOlEtB-VcHKkfaSV299aw2V8dmAg8/exec?\";\n    const serializedData = new URLSearchParams(data).toString();\n    await axios.get(url + serializedData);\n    setSuccess(true);\n  };\n\n  const handleChange = (event, key) => {\n    setForm({\n      ...formData,\n      [key]: event.target.value,\n    });\n  };\n\n  const form = (\n    <Form\n      onSubmit={(e) => handleSumbit(e)}\n      className=\"text-left font-weight-bold\"\n    >\n      <Form.Group controlId=\"nombre\">\n        <Form.Label>Nombre</Form.Label>\n        <Form.Control\n          type=\"input\"\n          placeholder=\"Tu nombre completo\"\n          required\n          value={formData.nombre}\n          onChange={(e) => handleChange(e, \"nombre\")}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"correo\">\n        <Form.Label>Correo electrónico</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"nombre@ejemplo.com\"\n          required\n          value={formData.correo}\n          onChange={(e) => handleChange(e, \"correo\")}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"telefono\">\n        <Form.Label>Teléfono</Form.Label>\n        <Form.Control\n          type=\"phone\"\n          value={formData.telefono}\n          onChange={(e) => handleChange(e, \"telefono\")}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"referencia\">\n        <Form.Label>¿Cómo te enteraste?</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"3\"\n          value={formData.referencia}\n          onChange={(e) => handleChange(e, \"referencia\")}\n        />\n      </Form.Group>\n      <div className=\"text-center\">\n        <Button\n          variant=\"outline-danger\"\n          className=\"mx-3\"\n          onClick={() => props.onCancel()}\n        >\n          Cancelar\n        </Button>\n        <Button\n          disabled={loader}\n          variant=\"success\"\n          type=\"submit\"\n          className=\"mx-3\"\n        >\n          {loader ? (\n            <Spinner\n              as=\"span\"\n              animation=\"grow\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n          ) : null}\n          {loader ? \"Registrando\" : \"Registrarme\"}\n        </Button>\n      </div>\n    </Form>\n  );\n\n  const successMessage = (\n    <Card body>\n      ¡Muchas felicidades! Tu registro ha sido exitoso, nos pondremos en contacto\n      contigo antes del evento para darte más detalles sobre tu participación.\n    </Card>\n  );\n\n  return (\n    <Parallax blur={2} bgImage={background} bgImageAlt=\"the cat\" strength={200}>\n      <div className=\"container my-4 col-sm-6\">\n        <EventCard {...props.event} />\n        {success ? successMessage : form}\n      </div>\n    </Parallax>\n  );\n};\n\nexport default EventForm;\n","import axios from \"axios\";\n\nconst getSheetData = async () => {\n  const sheetId = 1;\n  const sheet = \"1W9uoCAhQsc8J7wx0qgjJEKuvDKOcnJ6ihORRNOoTVXc\";\n  const query = \"\";\n  const useIntegers = true;\n  const showRows = true;\n  const showColumns = true;\n  const url = `https://spreadsheets.google.com/feeds/list/${sheet}/${sheetId}/public/full?alt=json`;\n\n  const response = await axios.get(url);\n\n  var { data } = response;\n  var responseObj = {};\n  var rows = [];\n  var columns = {};\n  if (data && data.feed && data.feed.entry) {\n    for (var i = 0; i < data.feed.entry.length; i++) {\n      var entry = data.feed.entry[i];\n      var keys = Object.keys(entry);\n      var newRow = {};\n      var queried = false;\n      for (var j = 0; j < keys.length; j++) {\n        var gsxCheck = keys[j].indexOf(\"gsx$\");\n        if (gsxCheck > -1) {\n          var key = keys[j];\n          var name = key.substring(4);\n          var content = entry[key];\n          var value = content.$t;\n          if (value.toLowerCase().indexOf(query.toLowerCase()) > -1) {\n            queried = true;\n          }\n          if (useIntegers === true && !isNaN(value)) {\n            value = Number(value);\n          }\n          newRow[name] = value;\n          if (queried === true) {\n            if (!columns.hasOwnProperty(name)) {\n              columns[name] = [];\n              columns[name].push(value);\n            } else {\n              columns[name].push(value);\n            }\n          }\n        }\n      }\n      if (queried === true) {\n        rows.push(newRow);\n      }\n    }\n    if (showColumns === true) {\n      responseObj[\"columns\"] = columns;\n    }\n    if (showRows === true) {\n      responseObj[\"rows\"] = rows;\n    }\n    return responseObj;\n  }\n};\n\nexport default getSheetData;","import React, { useState, useEffect } from \"react\";\nimport { Element, scroller } from \"react-scroll\";\nimport Header from \"./components/Header\";\nimport Events from \"./components/Events\";\nimport Profile from \"./components/Profile\";\nimport Form from \"./components/Form\";\nimport getJson from \"./lib/getJson\";\n\nimport \"./scss/App.scss\";\n\nfunction App() {\n  const [formKey, setformKey] = useState(null);\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await getJson();\n      const events = data.rows.slice(1);\n      const eventsWithKey = events.map((data) => ({\n        key: `${data.date}T${data.hour}`,\n        ...data,\n      }));\n      setEvents(eventsWithKey);\n    }\n    fetchData();\n  }, []);\n\n  const scrollTo = (name) => {\n    scroller.scrollTo(name, {\n      duration: 800,\n      delay: 0,\n      smooth: \"easeInOutQuart\",\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <>\n        <Header onAction={() => scrollTo(\"events\")} />\n        <Profile />\n        <Element name=\"events\">\n          {!formKey ? (\n            <Events\n              events={events}\n              onReservation={(index) => setformKey(index)}\n            />\n          ) : (\n            <Form\n              formKey={formKey}\n              onCancel={() => setformKey(null)}\n              event={events.find((data) => data.key === formKey)}\n            />\n          )}\n        </Element>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}